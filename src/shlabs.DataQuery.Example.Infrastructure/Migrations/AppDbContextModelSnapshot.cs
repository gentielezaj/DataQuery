// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using shlabs.DataQuery.Example.Infrastructure;

#nullable disable

namespace shlabs.DataQuery.Example.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("QueryInfo.Test.Infrastructure.Model.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("SchoolClassId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SchoolClassId");

                    b.HasIndex("StudentId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SchoolClassId = 1,
                            StudentId = 1,
                            Value = "A"
                        },
                        new
                        {
                            Id = 2,
                            SchoolClassId = 1,
                            StudentId = 2,
                            Value = "B"
                        },
                        new
                        {
                            Id = 3,
                            SchoolClassId = 1,
                            StudentId = 3,
                            Value = "C"
                        },
                        new
                        {
                            Id = 4,
                            SchoolClassId = 2,
                            StudentId = 1,
                            Value = "D"
                        },
                        new
                        {
                            Id = 5,
                            SchoolClassId = 2,
                            StudentId = 2,
                            Value = "F"
                        },
                        new
                        {
                            Id = 6,
                            SchoolClassId = 2,
                            StudentId = 3,
                            Value = "G"
                        });
                });

            modelBuilder.Entity("QueryInfo.Test.Infrastructure.Model.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Schools");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Central High"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Westside Elementary"
                        });
                });

            modelBuilder.Entity("QueryInfo.Test.Infrastructure.Model.SchoolClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int>("SchoolId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.HasIndex("TeacherId");

                    b.ToTable("SchoolClasses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Math 101",
                            SchoolId = 1,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Science 201",
                            SchoolId = 1,
                            TeacherId = 2
                        });
                });

            modelBuilder.Entity("QueryInfo.Test.Infrastructure.Model.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int>("SchoolId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "John Doe",
                            SchoolId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Jane Roe",
                            SchoolId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sam Lee",
                            SchoolId = 1
                        });
                });

            modelBuilder.Entity("QueryInfo.Test.Infrastructure.Model.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int>("SchoolId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Alice Smith",
                            SchoolId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bob Johnson",
                            SchoolId = 1
                        });
                });

            modelBuilder.Entity("QueryInfo.Test.Infrastructure.Model.Grade", b =>
                {
                    b.HasOne("QueryInfo.Test.Infrastructure.Model.SchoolClass", "SchoolClass")
                        .WithMany("Grades")
                        .HasForeignKey("SchoolClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QueryInfo.Test.Infrastructure.Model.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SchoolClass");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("QueryInfo.Test.Infrastructure.Model.SchoolClass", b =>
                {
                    b.HasOne("QueryInfo.Test.Infrastructure.Model.School", "School")
                        .WithMany("SchoolClasses")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QueryInfo.Test.Infrastructure.Model.Teacher", "Teacher")
                        .WithMany("SchoolClasses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("QueryInfo.Test.Infrastructure.Model.Student", b =>
                {
                    b.HasOne("QueryInfo.Test.Infrastructure.Model.School", "School")
                        .WithMany("Students")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("QueryInfo.Test.Infrastructure.Model.Teacher", b =>
                {
                    b.HasOne("QueryInfo.Test.Infrastructure.Model.School", "School")
                        .WithMany("Teachers")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("QueryInfo.Test.Infrastructure.Model.School", b =>
                {
                    b.Navigation("SchoolClasses");

                    b.Navigation("Students");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("QueryInfo.Test.Infrastructure.Model.SchoolClass", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("QueryInfo.Test.Infrastructure.Model.Student", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("QueryInfo.Test.Infrastructure.Model.Teacher", b =>
                {
                    b.Navigation("SchoolClasses");
                });
#pragma warning restore 612, 618
        }
    }
}
